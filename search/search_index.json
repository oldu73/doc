{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to doc Hello, doc ;)","title":"Home"},{"location":"#welcome-to-doc","text":"Hello, doc ;)","title":"Welcome to doc"},{"location":"elasticsearch/misc/","text":"ElasticSearch - Misc Update boolean field Chrome plugin ElasticSearch Head local: http://localhost:9200/ Other request tab URL http://localhost:9200/index/doc/id to check empty GET to update request _update POST {\"doc\":{\"deleted\":false}}","title":"Misc"},{"location":"elasticsearch/misc/#elasticsearch-misc","text":"","title":"ElasticSearch - Misc"},{"location":"elasticsearch/misc/#update-boolean-field","text":"Chrome plugin ElasticSearch Head local: http://localhost:9200/ Other request tab URL http://localhost:9200/index/doc/id to check empty GET to update request _update POST {\"doc\":{\"deleted\":false}}","title":"Update boolean field"},{"location":"git/misc/","text":"Git - Misc cache token to cache token (use token instead of password) (for 15 minutes, by default). src: github $ git config credential.helper cache or for 1 hour $ git config credential.helper 'cache --timeout=3600'","title":"Misc"},{"location":"git/misc/#git-misc","text":"","title":"Git - Misc"},{"location":"git/misc/#cache-token","text":"to cache token (use token instead of password) (for 15 minutes, by default). src: github $ git config credential.helper cache or for 1 hour $ git config credential.helper 'cache --timeout=3600'","title":"cache token"},{"location":"intellij/misc/","text":"Intellij - Misc Search for ; and replace with ;\\r\\n For a file where each values are separated with ';' but need each values on a new line to compare files. replace ; enable regex by ;\\r\\n To revert, do it in Notepad++ with a record sequence","title":"Misc"},{"location":"intellij/misc/#intellij-misc","text":"","title":"Intellij - Misc"},{"location":"intellij/misc/#search-for-and-replace-with-rn","text":"For a file where each values are separated with ';' but need each values on a new line to compare files. replace ; enable regex by ;\\r\\n To revert, do it in Notepad++ with a record sequence","title":"Search for ; and replace with ;\\r\\n"},{"location":"linux/misc/","text":"Linux - Misc diff Difference of 2 commands output $ diff <(ls test1) <(ls test2) Difference of sorted lists $ sort ok.txt > okSorted.txt $ sort all.txt > allSorted.txt $ diff --new-line-format=\"\" --unchanged-line-format=\"\" allSorted.txt okSorted.txt Mean of a column test.txt (warning on empty lines (maybe at the end)) 1 3 7 $ cat test.txt | awk '{ total += $1 } END { print total/NR }' 3.66667 Median of a column test.txt (warning on empty lines (maybe at the end)) 1 3 7 11 22 45 71 median.awk #/usr/bin/env awk { count[NR] = $1; } END { if (NR % 2) { print count[(NR + 1) / 2]; } else { print (count[(NR / 2)] + count[(NR / 2) + 1]) / 2.0; } } $ cat test.txt | awk -f median.awk 11 Check equal number of values below and above median $ cat test.txt | awk '{if($1 < 11) print $1}' | wc -l 3 $ cat test.txt | awk '{if($1 > 11) print $1}' | wc -l 3 Get nth column from file with field separated values test.txt column 1 row 1;column 2 row 1;column 3 row 1 column 1 row 2;column 2 row 2;column 3 row 2 column 1 row 3;column 2 row 3;column 3 row 3 $ cat test.txt | awk -F ';' '{print $2}' column 2 row 1 column 2 row 2 column 2 row 3 Conditional $ cat test.txt | awk -F ';' '{if($1 == \"column 1 row 2\") print $2}' column 2 row 2 List files Sorted by sizes and human readable $ ll -S -h Uniq values in a file, sorted and counted (first sort is mandatory) test.txt 1 71 3 7 22 1 11 22 45 71 22 $ cat test.txt | sort | uniq -c 2 1 1 11 3 22 1 3 1 45 1 7 2 71 sorted output $ cat test.txt | sort | uniq -c | sort 1 11 1 3 1 45 1 7 2 1 2 71 3 22 revert sorted output $ cat test.txt | sort | uniq -c | sort -r 3 22 2 71 2 1 1 7 1 45 1 3 1 11","title":"Misc"},{"location":"linux/misc/#linux-misc","text":"","title":"Linux - Misc"},{"location":"linux/misc/#diff","text":"Difference of 2 commands output $ diff <(ls test1) <(ls test2) Difference of sorted lists $ sort ok.txt > okSorted.txt $ sort all.txt > allSorted.txt $ diff --new-line-format=\"\" --unchanged-line-format=\"\" allSorted.txt okSorted.txt","title":"diff"},{"location":"linux/misc/#mean-of-a-column","text":"test.txt (warning on empty lines (maybe at the end)) 1 3 7 $ cat test.txt | awk '{ total += $1 } END { print total/NR }' 3.66667","title":"Mean of a column"},{"location":"linux/misc/#median-of-a-column","text":"test.txt (warning on empty lines (maybe at the end)) 1 3 7 11 22 45 71 median.awk #/usr/bin/env awk { count[NR] = $1; } END { if (NR % 2) { print count[(NR + 1) / 2]; } else { print (count[(NR / 2)] + count[(NR / 2) + 1]) / 2.0; } } $ cat test.txt | awk -f median.awk 11 Check equal number of values below and above median $ cat test.txt | awk '{if($1 < 11) print $1}' | wc -l 3 $ cat test.txt | awk '{if($1 > 11) print $1}' | wc -l 3","title":"Median of a column"},{"location":"linux/misc/#get-nth-column-from-file-with-field-separated-values","text":"test.txt column 1 row 1;column 2 row 1;column 3 row 1 column 1 row 2;column 2 row 2;column 3 row 2 column 1 row 3;column 2 row 3;column 3 row 3 $ cat test.txt | awk -F ';' '{print $2}' column 2 row 1 column 2 row 2 column 2 row 3","title":"Get nth column from file with field separated values"},{"location":"linux/misc/#conditional","text":"$ cat test.txt | awk -F ';' '{if($1 == \"column 1 row 2\") print $2}' column 2 row 2","title":"Conditional"},{"location":"linux/misc/#list-files","text":"Sorted by sizes and human readable $ ll -S -h","title":"List files"},{"location":"linux/misc/#uniq-values-in-a-file-sorted-and-counted-first-sort-is-mandatory","text":"test.txt 1 71 3 7 22 1 11 22 45 71 22 $ cat test.txt | sort | uniq -c 2 1 1 11 3 22 1 3 1 45 1 7 2 71 sorted output $ cat test.txt | sort | uniq -c | sort 1 11 1 3 1 45 1 7 2 1 2 71 3 22 revert sorted output $ cat test.txt | sort | uniq -c | sort -r 3 22 2 71 2 1 1 7 1 45 1 3 1 11","title":"Uniq values in a file, sorted and counted (first sort is mandatory)"},{"location":"mkdocs/getting-started/","text":"MkDocs - Getting Started Installation $ pip install mkdocs check $ mkdocs --version Initialize current folder $ mkdocs new . Build documentation $ mkdocs build Deploy to github First synchronize current folder with corresponding github repository. $ mkdocs gh-deploy","title":"Getting Started"},{"location":"mkdocs/getting-started/#mkdocs-getting-started","text":"","title":"MkDocs - Getting Started"},{"location":"mkdocs/getting-started/#installation","text":"$ pip install mkdocs check $ mkdocs --version","title":"Installation"},{"location":"mkdocs/getting-started/#initialize-current-folder","text":"$ mkdocs new .","title":"Initialize current folder"},{"location":"mkdocs/getting-started/#build-documentation","text":"$ mkdocs build","title":"Build documentation"},{"location":"mkdocs/getting-started/#deploy-to-github","text":"First synchronize current folder with corresponding github repository. $ mkdocs gh-deploy","title":"Deploy to github"}]}